"use strict";
/* eslint @typescript-eslint/explicit-module-boundary-types: 0 */
exports.__esModule = true;
exports.conv = void 0;
// Copied to here as import is not working
// https://github.com/codsen/codsen/blob/main/packages/color-shorthand-hex-to-six-digit/src/main.ts
var r = require("hex-color-regex");
var isPlainObject = require("lodash.isplainobject");
var clone = require("lodash.clonedeep");
/**
 * Convert shorthand hex color codes into full
 */
function conv(originalInput) {
    // prevent any input argument mutation:
    var input = clone(originalInput);
    // f's
    // ====================
    function toFullHex(hex, _findings, offset, string) {
        if (string[offset - 1] !== "&" && // consider false positives like &#124;
            hex.charAt(0) === "#") {
            if (hex.length === 4) {
                return ("#" + hex.charAt(1) + hex.charAt(1) + hex.charAt(2) + hex.charAt(2) + hex.charAt(3) + hex.charAt(3)).toLowerCase();
            }
            if (hex.length === 5) {
                return ("#" + hex.charAt(1) + hex.charAt(1) + hex.charAt(2) + hex.charAt(2) + hex.charAt(3) + hex.charAt(3) + hex.charAt(4) + hex.charAt(4)).toLowerCase();
            }
        }
        return hex.toLowerCase();
    }
    // action
    // ====================
    if (typeof originalInput === "string") {
        input = input.replace(r(), toFullHex);
    }
    else if (Array.isArray(input)) {
        for (var i = 0, len = input.length; i < len; i++) {
            input[i] = conv(input[i]);
        }
    }
    else if (isPlainObject(originalInput)) {
        Object.keys(input).forEach(function (key) {
            input[key] = conv(input[key]);
        });
    }
    else {
        return originalInput;
    }
    return input;
}
exports.conv = conv;
